'use strict';var agentStatusReadyHtml='\x3ci class\x3d"fa fa-check-square" aria-hidden\x3d"true" style\x3d"font-size:1.1em"\x3e\x3c/i\x3e The service is active',dataServiceMap={},renderAgent=function(a){var b=$("#agents_holder").empty().show();dataServiceMap={};_.forEach(a,function(d,e){e=d.id;dataServiceMap[e]=d;var c=!1;1==d.status&&(c=!0);d;var f=_.template($("#tpl_agent_view").html());b.append(f(d));b.find("i.config_description").tooltip();c&&($("#service_box_"+e).addClass("active_service_box"),
$("#service_box_header_"+e).addClass("config_ready"));1===d.status&&(c=agentStatusReadyHtml,null!=d.startedAt&&(c+=" and working "),$("#"+e+"_api_key_label").html(c).addClass("config_ready"))});$("#services_tooltip").tooltip()},dataServiceLoader=function(a,b,d,e,c,f,g,h){a={keywords:a,filterServiceValue:b,startIndex:f,numberResult:g};a.forPersonalization=d;a.forDataEnrichment=e;a.forSynchronization=c;LeoAdminApiUtil.getSecuredData("/cdp/agent/list",a,function(k){"function"===typeof h&&"object"===
typeof k.data&&h(k.data)})},loadAgents=function(a,b){$("#agents_pagination").empty();$("#agents_loader").show();$("#agents_holder").hide();$("#filter_agents_keywords").on("keyup",function(f){13===f.keyCode&&loadAllAgents()});var d=!0,e=!0,c=!0;"active_for_personalization"===b?c=e=!1:"active_for_enrichment"===b?c=d=!1:"active_for_synchronization"===b&&(d=e=!1);dataServiceLoader(a,b,d,e,c,0,1E4,function(f){$("#agents_loader").hide();0<f.length?$("#agents_pagination").pagination({dataSource:f,className:"paginationjs paginationjs-big",
pageSize:6,callback:function(g,h){renderAgent(g)},beforePageOnClick:function(){}}):$("#agents_holder").show().html('\x3cdiv class\x3d"col-lg-12 row highlight_text"\x3e \x3ch3 style\x3d"text-align: center;" \x3eNo results found !\x3c/h3\x3e \x3c/div\x3e')})};function resetAgentFilter(){$("#filter_agents_keywords").val("");$("#select_filter_agents").val("all");loadAllAgents()}function loadAllAgents(){var a=$("#filter_agents_keywords").val(),b=$("#select_filter_agents").val();loadAgents(a,b)}
function saveAgentInfo(a){a=$(a).data("id");var b=dataServiceMap[a];b.name=$("#dataServiceName").val().trim();b.dagId=$("#dataServiceDagId").val().trim();b.description=$("#dataServiceDescription").val().trim();b.forDataEnrichment=$("#forDataEnrichment").prop("checked");b.forPersonalization=$("#forPersonalization").prop("checked");b.forSynchronization=$("#forSynchronization").prop("checked");var d={};$("#dataServiceConfigList div.config_item").each(function(){var c=$(this).find('input[name\x3d"configName"]').val(),
f=$(this).find('input[name\x3d"configValue"]').val(),g=$(this).find('input[name\x3d"configValue"]').attr("type");0<c.length&&(d[c]="number"===g&&0<f.length?parseInt(f):f)});b.configs=d;b.status=$("#agentStatus").prop("checked")?1:0;if(""===b.name)notifyErrorMessage("Service name is empty, please enter a name");else{var e=function(c){null!=c?(notifySavedOK("Activation Data Service",'The data of "\x3cb\x3e'+b.name+'\x3c/b\x3e" has been saved successfully'),$("#dialogSetAgentInfo").modal("hide"),loadAgents()):
console.error("saveAgentInfo ",c)};LeoAdminApiUtil.callPostAdminApi("/cdp/agent/save",{objectJson:JSON.stringify(b)},function(c){0===c.httpCode&&""===c.errorMessage?e(c.data):LeoAdminApiUtil.logErrorPayload(c)},e)}}function newAgent(){LeoAdminApiUtil.getSecuredData("/cdp/agent/get",{dataServiceName:"",dataServiceId:""},function(a){a=a.data;showAgentDialog(a);dataServiceMap[a.id]=a})}
function loadAgent(a){var b=dataServiceMap[a];"object"===typeof b?showAgentDialog(b):notifyErrorMessage("Can not load data for service: "+a)}
function resetAgent(a){var b=function(e){$("#"+e+"_api_key").val("");$("#"+e+"_api_url").val("");var c=dataServiceMap[e];_.forOwn(c.configs,function(g,h){c.configs.service_api_url="";c.startedAt=null});c.status=0;var f=function(g){null!=g?(iziToast.success({title:"Data Service",message:"The config of \x3cb\x3e"+c.name+"\x3c/b\x3e is reset OK!",timeout:3E3}),loadAgents()):console.error("resetAgent ",g)};e={objectJson:JSON.stringify(c)};LeoAdminApiUtil.callPostAdminApi("/cdp/agent/save",e,function(g){0===
g.httpCode&&""===g.errorMessage?f(g.data):LeoAdminApiUtil.logErrorPayload(g)},f)};$("#delete_callback").val("");$("#confirmDeleteDialog").modal({focus:!0});if(a){var d="resetAgent_"+a;window[d]=function(){b(a)};$("#delete_callback").val(d);$("#deletedInfoTitle").text("Service ID: "+a).show();$("#deletedInfoMsg").text("Do you want to reset API Key and API URL of data service permanently?")}}
function deleteAgent(a){$("#delete_callback").val("");$("#confirmDeleteDialog").modal({focus:!0});if(a){var b="deleteAgent_"+a;window[b]=function(){LeoAdminApiUtil.callPostAdminApi("/cdp/agent/delete",{dataServiceId:a},function(d){0===d.httpCode&&""===d.errorMessage?d.data===a?(iziToast.success({title:"Data Service",message:"The service \x3cb\x3e"+a+"\x3c/b\x3e is successfully deleted!",timeout:3E3}),loadAgents()):console.error("deleteAgent ",d):LeoAdminApiUtil.logErrorPayload(d)})};$("#delete_callback").val(b);
$("#deletedInfoTitle").text("Service ID: "+a).show();$("#deletedInfoMsg").text("Do you want to delete the selected service permanently?")}}
function showAgentDialog(a){if("string"!==typeof a.id)notifyErrorMessage("Invalid data service: "+a);else{$("#dialogSetAgentInfo").modal({backdrop:"static",keyboard:!1});var b=a.id;$("#dataServiceSaveButton").data("id",b);$("#dataServiceName").val(a.name);$("#dataServiceDescription").val(a.description);$("#dataServiceDagId").val(a.dagId||"");$("#agentStatus").prop("checked",1==a.status);$("#forPersonalization").prop("checked",a.forPersonalization);$("#forDataEnrichment").prop("checked",a.forDataEnrichment);
$("#forSynchronization").prop("checked",a.forSynchronization);$("#dataServiceConfigList").empty();var d=0;_.forOwn(a.configs,function(e,c){var f=(new Date).getTime()+d;d++;addNewConfigForAgent(b,{serviceId:b,configName:c,configValue:e,time:f})})}}
function addNewConfigForAgent(a,b){var d=(new Date).getTime()+randomInteger(0,1E4);a=null!=b?b:{serviceId:a,configName:"",configValue:"",time:d};console.log(a);a.inputType="number"===typeof a.configValue?"number":"text";b=_.template($("#tpl_config_row_item").html());$("#dataServiceConfigList").append(b(a)).find("input:last").focus()}function deleteConfigOfAgent(a){$("#"+a).remove()};